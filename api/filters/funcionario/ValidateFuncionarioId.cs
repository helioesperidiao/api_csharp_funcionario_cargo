using Microsoft.AspNetCore.Mvc.Filters;
using Api.Utils;
using System;

namespace Api.Filters
{
    public class ValidateFuncionarioId : ActionFilterAttribute
    {
        public override void OnActionExecuting(ActionExecutingContext context)
        {
            Console.WriteLine("üî∂ ValidateFuncionarioId.OnActionExecuting()");

            // Tenta obter o argumento "idFuncionario" da a√ß√£o
            if (!context.ActionArguments.TryGetValue("idFuncionario", out var idObj) || idObj == null)
            {
                throw new ErrorResponse(
                    400,
                    "O par√¢metro 'idFuncionario' √© obrigat√≥rio!",
                    new { detalhe = "Par√¢metro ausente na requisi√ß√£o" }
                );
            }

            // Converte para inteiro
            int idFuncionario;
            try
            {
                idFuncionario = Convert.ToInt32(idObj);
            }
            catch
            {
                throw new ErrorResponse(
                    400,
                    "ID inv√°lido",
                    new { detalhe = "O par√¢metro 'idFuncionario' deve ser um n√∫mero inteiro" }
                );
            }

            // Valida se o ID √© positivo
            if (idFuncionario <= 0)
            {
                throw new ErrorResponse(
                    400,
                    "ID inv√°lido",
                    new { detalhe = "O par√¢metro 'idFuncionario' deve ser maior que zero" }
                );
            }

            // Se chegar aqui, o ID √© v√°lido
        }
    }
}
