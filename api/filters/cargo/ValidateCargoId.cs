using Microsoft.AspNetCore.Mvc.Filters;
using Api.Utils;
using System;

namespace Api.Filters
{
    /// <summary>
    /// Filtro de a√ß√£o respons√°vel por validar o par√¢metro "idCargo"
    /// passado na URL ou na rota de um endpoint.
    /// 
    /// üîπ ActionFilterAttribute permite executar l√≥gica antes ou depois
    /// de um m√©todo do controller ser chamado.
    /// </summary>
    public class ValidateCargoId : ActionFilterAttribute
    {
        /// <summary>
        /// Executado antes do m√©todo do controller.
        /// Valida se o ID do cargo foi passado, se √© um n√∫mero inteiro
        /// e se √© maior que zero.
        /// </summary>
        public override void OnActionExecuting(ActionExecutingContext context)
        {
            Console.WriteLine("üî∂ ValidateCargoId.OnActionExecuting()");

            // 1Ô∏è‚É£ Tenta obter o argumento "idCargo" passado na requisi√ß√£o
            // Pode vir da rota, query string ou body dependendo do endpoint
            if (!context.ActionArguments.TryGetValue("idCargo", out var idObj) || idObj == null)
            {
                // 2Ô∏è‚É£ Se n√£o existir, lan√ßa erro com status 400
                throw new ErrorResponse(
                    400,
                    "O par√¢metro 'idCargo' √© obrigat√≥rio!",
                    new { detalhe = "Par√¢metro ausente na requisi√ß√£o" }
                );
            }

            // 3Ô∏è‚É£ Converte o valor para inteiro de forma segura
            int idCargo;
            try
            {
                idCargo = Convert.ToInt32(idObj);
            }
            catch
            {
                // 4Ô∏è‚É£ Se a convers√£o falhar, significa que n√£o √© um n√∫mero v√°lido
                throw new ErrorResponse(
                    400,
                    "ID inv√°lido",
                    new { detalhe = "O par√¢metro 'idCargo' deve ser um n√∫mero inteiro" }
                );
            }

            // 5Ô∏è‚É£ Valida se o ID √© positivo
            if (idCargo <= 0)
            {
                // 6Ô∏è‚É£ Se n√£o for positivo, retorna erro
                throw new ErrorResponse(
                    400,
                    "ID inv√°lido",
                    new { detalhe = "O par√¢metro 'idCargo' deve ser maior que zero" }
                );
            }

            // 7Ô∏è‚É£ Se chegar aqui, o ID √© considerado v√°lido e o fluxo segue para o controller
        }
    }
}
