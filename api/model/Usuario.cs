using System;

namespace Api.Model
{
    /// <summary>
    /// Representa um usu√°rio do sistema.
    /// 
    /// Objetivo:
    /// - Estender a classe Funcionario com propriedades espec√≠ficas de autentica√ß√£o.
    /// - Garantir integridade dos dados via getters e setters.
    /// üîπ Demonstra conceitos de heran√ßa e encapsulamento.
    /// </summary>
    public class Usuario : Funcionario
    {
        // 1Ô∏è‚É£ Atributo privado espec√≠fico do usu√°rio (token JWT)
        // üîπ Mant√©m o token seguro e for√ßa o uso da propriedade para acesso
        private string _token = "";

        /// <summary>
        /// Construtor padr√£o.
        /// üîπ Inicializa a inst√¢ncia do usu√°rio.
        /// </summary>
        public Usuario() { }

        /// <summary>
        /// Token de autentica√ß√£o do usu√°rio.
        /// üîπ Regra: string n√£o nula ou vazia.
        /// üîπ Demonstra valida√ß√£o de propriedades e heran√ßa de Funcionario.
        /// </summary>
        public string Token
        {
            get => _token; // 2Ô∏è‚É£ Getter do token
            set
            {
                // 3Ô∏è‚É£ Valida se o token n√£o √© nulo ou vazio
                if (string.IsNullOrWhiteSpace(value))
                {
                    throw new ArgumentException("Token n√£o pode ser nulo ou vazio.");
                }

                // 4Ô∏è‚É£ Remove espa√ßos extras e atribui ao atributo privado
                _token = value.Trim();
            }
        }
    }
}
